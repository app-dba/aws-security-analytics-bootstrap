# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create Athena Bootstrap Infrastructure Resources including default analyst Workgroup and CloudTrail, Flow Log, and DNS Resolver log Tables'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Athena Environment Parameters'
      Parameters:
      - ParamWorkgroupName
      - ParamWorkgroupDescription
      - ParamQueryOutputLocationName
    - Label:
        default: 'Glue Database Parameters'
      Parameters:
      - ParamDatabaseName
    - Label:
        default: 'Glue CloudTrail Table Parameters'
      Parameters:
      - ParamCloudTrailTableEnabled
      - ParamCloudTrailTableName
      - ParamCloudTrailSource
      - ParamCloudTrailProjectionEventStartDate
      - ParamCloudTrailAccountEnum
      - ParamCloudTrailRegionEnum
    - Label:
        default: 'Glue VPC Flow Log Table Parameters'
      Parameters:
      - ParamVPCFlowTableEnabled
      - ParamVPCFlowTableName
      - ParamVPCFlowSource
      - ParamVPCFlowProjectionEventStartDate
      - ParamVPCFlowAccountEnum
      - ParamVPCFlowRegionEnum
    - Label:
        default: 'Glue Route53 DNS Resolver Log Table Parameters'
      Parameters:
      - ParamDNSResolverTableEnabled
      - ParamDNSResolverTableName
      - ParamDNSResolverSource
      - ParamDNSResolverProjectionEventStartDate
      - ParamDNSResolverAccountEnum
      - ParamDNSResolverVPCEnum
    - Label:
        default: 'Glue ALB Log Table Parameters'
      Parameters:
      - ParamALBTableEnabled
      - ParamALBTableName
      - ParamALBProjectionEventStartDate
      - ParamALBAccountEnum
      - ParamALBNumRegions
      - ParamALBSources

Parameters:
  
  # Athena Environment Parameters
  ParamWorkgroupName:
    Description: 'Name of the initial Athena Security Analysis workgroup to create'
    Type: String
    Default: SecurityAnalysis
  ParamWorkgroupDescription:
    Description: 'Description of the initial Athena Security Analysis workgroup'
    Type: String
    Default: Security Analysis Athena Workgroup
  ParamQueryOutputLocationName:
    Description: 'S3 path to write all query results, store 45-day query history, and created tables via queries'
    Type: String
    Default: s3://query_history_bucket/optional_prefix/

  # Glue Database Parameters
  ParamDatabaseName:
    Description: 'Name of the Glue database to create, which will contain all security analysis tables created by this template (**cannot contain hyphen**)'
    Type: String
    Default: security_analysis
  
  # CloudTrail Table Parameters
  ParamCloudTrailTableEnabled:
    Description: 'Do you want to create and enable a table for CloudTrail?'
    Type: String
    Default: 'YES'
    AllowedValues:
    - 'YES'
    - 'NO'
  ParamCloudTrailTableName:
    Description: 'Name of the cloudtrail Glue table to create'
    Type: String
    Default: cloudtrail
  ParamCloudTrailSource:
    Description: "S3 base path of CloudTrail logs to be included in the CloudTrail table (must end with /AWSLogs/ or /AWSLogs/<your_org_id>/ if you're using an organization trail)"
    Type: String
    Default: s3://<bucket>/<prefix>/AWSLogs/
  ParamCloudTrailProjectionEventStartDate:
    Description: 'Start date for CloudTrail logs (replace <YYYY>/<MM>/<DD> with the first date of your logs, example: 2020/11/30)'
    Type: String
    Default: '<YYYY>/<MM>/<DD>'
  ParamCloudTrailAccountEnum: 
    Description: 'Account(s) to include in the CloudTrail log table in a comma separated list with NO SPACES (example: "0123456789,0123456788,0123456777"); note that all accounts must be logging to the same source, with contents in {ParamVPCFlowSource}/AWSLogs/{account_number}/CloudTrail'
    Type: String
    Default: '<account_num_1>,<account_num_2>,...'
  ParamCloudTrailRegionEnum:
    Description: 'Regions to include in the CloudTrail log table in a comma separated list with NO SPACES; Include all regions for full coverage even if there are no logs currently in that region'
    Type: String
    Default: us-east-2,us-east-1,us-west-1,us-west-2,af-south-1,ap-east-1,ap-south-1,ap-northeast-3,ap-northeast-2,ap-southeast-1,ap-southeast-2,ap-northeast-1,ca-central-1,cn-north-1,cn-northwest-1,eu-central-1,eu-west-1,eu-west-2,eu-south-1,eu-west-3,eu-north-1,me-south-1,sa-east-1
  
  # VPC Flow Log Table Parameters
  ParamVPCFlowTableEnabled:
    Description: 'Do you want to create and enable a table for VPC Flow Logs?'
    Type: String
    Default: 'YES'
    AllowedValues:
    - 'YES'
    - 'NO'
  ParamVPCFlowTableName: 
    Description: 'Name of the VPC flow log Glue table to create'
    Type: String
    Default: vpcflow    
  ParamVPCFlowSource:
    Description: 'S3 base path of VPC flow logs to be included in the VPC flow table (must end with /AWSLogs/)'
    Type: String
    Default: s3://<bucket>/<prefix>/AWSLogs/   
  ParamVPCFlowProjectionEventStartDate:
    Description: 'Start date for VPC flow logs (replace <YYYY>/<MM>/<DD> with the first date of your logs, example: 2020/11/30)'
    Type: String
    Default: '<YYYY>/<MM>/<DD>'
  ParamVPCFlowAccountEnum:
    Description: 'Account(s) to include in the VPC flow log table in a comma separated list with NO SPACES (example: "0123456789,0123456788,0123456777"); note that all accounts must be logging to the same source, with contents in {ParamVPCFlowSource}/AWSLogs/{account_number}/vpcflowlogs/'
    Type: String
    Default: '<account_num_1>,<account_num_2>,...'
  ParamVPCFlowRegionEnum:
    Description: 'Regions to include in the VPC flow log table in a comma separated list with NO SPACES; Include all regions for full coverage even if there are no logs currently in that region'
    Type: String
    Default: us-east-2,us-east-1,us-west-1,us-west-2,af-south-1,ap-east-1,ap-south-1,ap-northeast-3,ap-northeast-2,ap-southeast-1,ap-southeast-2,ap-northeast-1,ca-central-1,cn-north-1,cn-northwest-1,eu-central-1,eu-west-1,eu-west-2,eu-south-1,eu-west-3,eu-north-1,me-south-1,sa-east-1
  
  # DNS Resolver Log Table Parameters
  ParamDNSResolverTableEnabled:
    Description: 'Do you want to create and enable a table for Route53 DNS Resolver Logs?'
    Type: String
    Default: 'YES'
    AllowedValues:
    - 'YES'
    - 'NO'
  ParamDNSResolverTableName:
    Description: 'Name of the Route53 DNS Resolver log Glue table to create'
    Type: String
    Default: r53dns
  ParamDNSResolverSource:
    Description: 'S3 base path of Route53 DNS Resolver logs to be included in the Route53 DNS Resolver table (must end with /AWSLogs/)'
    Type: String
    Default: s3://<bucket>/<prefix>/AWSLogs/
  ParamDNSResolverProjectionEventStartDate:
    Description: 'Start date for Route53 DNS Resolver logs (replace <YYYY>/<MM>/<DD> with the first date of your logs, example: 2020/11/30)'
    Type: String
    Default: '<YYYY>/<MM>/<DD>'
  ParamDNSResolverAccountEnum:
    Description: 'Account(s) to include in the Route53 DNS Resolver log table in a comma separated list with NO SPACES (example: "0123456789,0123456788,0123456777"); note that all accounts must be logging to the same source, with contents in {ParamVPCFlowSource}/AWSLogs/{account_number}/vpcdnsquerylogs/'
    Type: String
    Default: <account_num_1>,<account_num_2>,...
  ParamDNSResolverVPCEnum:
    Description: 'VPC IDs to include in the Route53 DNS Resolver log table in a comma separated list with NO SPACES; Include all VPC IDs for full coverage even if there are no logs currently in that VPC'
    Type: String
    Default: <vpc_id_1>,<vpc_id_2>,...

  # ALB Table Parameters
  ParamALBTableEnabled:
    Description: 'Do you want to create and enable a table for ALB logs?'
    Type: String
    Default: 'YES'
    AllowedValues:
    - 'YES'
    - 'NO'
  ParamALBNumRegions:
    Description: 'Number of regions where ALB logs are stored. Should correlate with the number of regions specifed in the ParamALBSources parameter'
    Type: Number
    Default: 1
    AllowedValues:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
  ParamALBTableName:
    Description: 'Name of the ALB Glue table to create (_<region> will be appended to this name)'
    Type: String
    Default: alb
  ParamALBSources:
    Description: "Comma seperated list of regions and associated S3 bucket path where logs are stored (including any custom prefix) with NO SPACES (must end with /AWSLogs/) e.g. <region>,s3://<bucket>/<prefix>/AWSLogs/"
    Type: String
    Default: <region1>,s3://<bucket>/<prefix>/AWSLogs/,<region2>,s3://<bucket>/<prefix>/AWSLogs/
  ParamALBProjectionEventStartDate:
    Description: 'Start date for ALB logs (replace <YYYY>/<MM>/<DD> with the first date of your logs, example: 2020/11/30)'
    Type: String
    Default: '<YYYY>/<MM>/<DD>'
  ParamALBAccountEnum: 
    Description: 'Account(s) to include in the ALB log table in a comma separated list with NO SPACES (example: "0123456789,0123456788,0123456777"); note that all accounts must be logging to the same source, with contents in {ParamALBSource}/AWSLogs/{account_number}/ALB'
    Type: String
    Default: '<account_num_1>,<account_num_2>,...'

Conditions:
  ConditionCreateCloudTrailTable: !Equals 
    - !Ref ParamCloudTrailTableEnabled
    - 'YES'
  ConditionCreateVPCFlowTable: !Equals 
    - !Ref ParamVPCFlowTableEnabled
    - 'YES'
  ConditionCreateDNSResolverTable: !Equals 
    - !Ref ParamDNSResolverTableEnabled
    - 'YES'
  ConditionCreateALBTable: !Equals 
    - !Ref ParamALBTableEnabled
    - 'YES'
  Condition1To10ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 1]
    - !Equals [!Ref ParamALBNumRegions, 2]
    - !Equals [!Ref ParamALBNumRegions, 3]
    - !Equals [!Ref ParamALBNumRegions, 4]
    - !Equals [!Ref ParamALBNumRegions, 5]
    - !Equals [!Ref ParamALBNumRegions, 6]
    - !Equals [!Ref ParamALBNumRegions, 7]
    - !Equals [!Ref ParamALBNumRegions, 8]
    - !Equals [!Ref ParamALBNumRegions, 9]
    - !Equals [!Ref ParamALBNumRegions, 10]
  Condition5To10ALBRegions: !Or    
    - !Equals [!Ref ParamALBNumRegions, 5]
    - !Equals [!Ref ParamALBNumRegions, 6]
    - !Equals [!Ref ParamALBNumRegions, 7]
    - !Equals [!Ref ParamALBNumRegions, 8]
    - !Equals [!Ref ParamALBNumRegions, 9]
    - !Equals [!Ref ParamALBNumRegions, 10]
  Condition11To20ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 11]
    - !Equals [!Ref ParamALBNumRegions, 12]
    - !Equals [!Ref ParamALBNumRegions, 13]
    - !Equals [!Ref ParamALBNumRegions, 14]
    - !Equals [!Ref ParamALBNumRegions, 15]
    - !Equals [!Ref ParamALBNumRegions, 16]
    - !Equals [!Ref ParamALBNumRegions, 17]
    - !Equals [!Ref ParamALBNumRegions, 18]
    - !Equals [!Ref ParamALBNumRegions, 19]
    - !Equals [!Ref ParamALBNumRegions, 20]
  Condition15To20ALBRegions: !Or    
    - !Equals [!Ref ParamALBNumRegions, 15]
    - !Equals [!Ref ParamALBNumRegions, 16]
    - !Equals [!Ref ParamALBNumRegions, 17]
    - !Equals [!Ref ParamALBNumRegions, 18]
    - !Equals [!Ref ParamALBNumRegions, 19]
    - !Equals [!Ref ParamALBNumRegions, 20]
  Condition1ALBRegions: !Or
    - !Condition Condition1To10ALBRegions
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition2ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 2]
    - !Equals [!Ref ParamALBNumRegions, 3]
    - !Equals [!Ref ParamALBNumRegions, 4]
    - !Condition Condition5To10ALBRegions
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition3ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 3]
    - !Equals [!Ref ParamALBNumRegions, 4]
    - !Condition Condition5To10ALBRegions
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition4ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 4]
    - !Condition Condition5To10ALBRegions
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition5ALBRegions: !Or
    - !Condition Condition5To10ALBRegions
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition6ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 6]
    - !Equals [!Ref ParamALBNumRegions, 7]
    - !Equals [!Ref ParamALBNumRegions, 8]
    - !Equals [!Ref ParamALBNumRegions, 9]
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition7ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 7]
    - !Equals [!Ref ParamALBNumRegions, 8]
    - !Equals [!Ref ParamALBNumRegions, 9]
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition8ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 8]
    - !Equals [!Ref ParamALBNumRegions, 9]
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition9ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 9]
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition10ALBRegions: !Or
    - !Condition Condition11To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition11ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 11]
    - !Equals [!Ref ParamALBNumRegions, 12]
    - !Equals [!Ref ParamALBNumRegions, 13]
    - !Equals [!Ref ParamALBNumRegions, 14]
    - !Condition Condition15To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition12ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 12]
    - !Equals [!Ref ParamALBNumRegions, 13]
    - !Equals [!Ref ParamALBNumRegions, 14]
    - !Condition Condition15To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition13ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 13]
    - !Equals [!Ref ParamALBNumRegions, 14]
    - !Condition Condition15To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition14ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 14]
    - !Condition Condition15To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition15ALBRegions: !Or
    - !Condition Condition15To20ALBRegions
    - !Condition Condition21ALBRegions
  Condition16ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 16]
    - !Equals [!Ref ParamALBNumRegions, 17]
    - !Equals [!Ref ParamALBNumRegions, 18]
    - !Equals [!Ref ParamALBNumRegions, 19]
    - !Equals [!Ref ParamALBNumRegions, 20]
    - !Equals [!Ref ParamALBNumRegions, 21]
  Condition17ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 17]
    - !Equals [!Ref ParamALBNumRegions, 18]
    - !Equals [!Ref ParamALBNumRegions, 19]
    - !Equals [!Ref ParamALBNumRegions, 20]
    - !Equals [!Ref ParamALBNumRegions, 21]
  Condition18ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 18]
    - !Equals [!Ref ParamALBNumRegions, 19]
    - !Equals [!Ref ParamALBNumRegions, 20]
    - !Equals [!Ref ParamALBNumRegions, 21]
  Condition19ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 19]
    - !Equals [!Ref ParamALBNumRegions, 20]
    - !Equals [!Ref ParamALBNumRegions, 21]
  Condition20ALBRegions: !Or
    - !Equals [!Ref ParamALBNumRegions, 20]
    - !Equals [!Ref ParamALBNumRegions, 21]
  Condition21ALBRegions: !Equals
    - !Ref ParamALBNumRegions
    - 21
  ConditionCreate1ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition1ALBRegions
  ConditionCreate2ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition2ALBRegions
  ConditionCreate3ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition3ALBRegions
  ConditionCreate4ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition4ALBRegions
  ConditionCreate5ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition5ALBRegions
  ConditionCreate6ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition6ALBRegions
  ConditionCreate7ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition7ALBRegions
  ConditionCreate8ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition8ALBRegions
  ConditionCreate9ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition9ALBRegions
  ConditionCreate10ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition10ALBRegions
  ConditionCreate11ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition11ALBRegions
  ConditionCreate12ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition12ALBRegions
  ConditionCreate13ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition13ALBRegions
  ConditionCreate14ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition14ALBRegions
  ConditionCreate15ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition15ALBRegions
  ConditionCreate16ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition16ALBRegions
  ConditionCreate17ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition17ALBRegions
  ConditionCreate18ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition18ALBRegions
  ConditionCreate19ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition19ALBRegions
  ConditionCreate20ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition20ALBRegions
  ConditionCreate21ALBTables: !And
    - !Condition ConditionCreateCloudTrailTable
    - !Condition Condition21ALBRegions

Resources:
  # Create an AWS Athena Workgroup
  ResourceAthenaWorkgroupDefault:
    Type: AWS::Athena::WorkGroup
    Properties:
      Description: !Ref ParamWorkgroupDescription
      Name: !Ref ParamWorkgroupName
      RecursiveDeleteOption: TRUE
      State: ENABLED
      WorkGroupConfiguration:
        # EnforceWorkGroupConfiguration is True , Athena uses the workgroup-wide settings for query 
        # results location and encryption. It also overrides any other settings that you specified 
        # for the query in the console, by using the API operations, or with the drivers. 
        # This affects you only if you run queries in this workgroup. If you do, workgroup settings are used
        EnforceWorkGroupConfiguration: TRUE
        EngineVersion: 
            SelectedEngineVersion: 'Athena engine version 2'
        PublishCloudWatchMetricsEnabled: FALSE
        RequesterPaysEnabled: FALSE 
        ResultConfiguration: 
          OutputLocation: !Ref ParamQueryOutputLocationName
          EncryptionConfiguration: 
            EncryptionOption: SSE_S3
  # Create an AWS Glue database
  ResourceDatabaseASL:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref ParamDatabaseName  
        Description: Database to hold tables for AWS Service logs logs
  # Create an AWS Glue table
  ResourceTableCloudTrail:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreateCloudTrailTable
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Ref ParamCloudTrailTableName
        Description: Table for CloudTrail logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "json",
          "EXTERNAL": "true",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamCloudTrailProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.region_partition.type": "enum",
          "projection.region_partition.values": !Ref ParamCloudTrailRegionEnum,
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamCloudTrailAccountEnum,
          "storage.location.template": !Join [ "", [ !Ref ParamCloudTrailSource,"${account_partition}/CloudTrail/${region_partition}/${date_partition}" ] ]
  }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: region_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: eventversion
            Type: string
          - Name: useridentity
            Type: struct<type:string,principalid:string,arn:string,accountid:string,invokedby:string,accesskeyid:string,userName:string,sessioncontext:struct<attributes:struct<mfaauthenticated:string,creationdate:string>,sessionissuer:struct<type:string,principalId:string,arn:string,accountId:string,userName:string>>>
          - Name: eventtime
            Type: string
          - Name: eventsource
            Type: string
          - Name: eventname
            Type: string
          - Name: awsregion
            Type: string
          - Name: sourceipaddress
            Type: string
          - Name: useragent
            Type: string
          - Name: errorcode
            Type: string
          - Name: errormessage
            Type: string
          - Name: requestparameters
            Type: string
          - Name: responseelements
            Type: string
          - Name: additionaleventdata
            Type: string
          - Name: requestid
            Type: string
          - Name: eventid
            Type: string
          - Name: resources 
            Type: array<struct<ARN:string,accountId:string,type:string>>
          - Name: eventtype
            Type: string
          - Name: apiversion
            Type: string
          - Name: readonly
            Type: string
          - Name: recipientaccountid
            Type: string
          - Name: serviceeventdetails
            Type: string
          - Name: sharedeventid
            Type: string
          - Name: vpcendpointid
            Type: string
          InputFormat: com.amazon.emr.cloudtrail.CloudTrailInputFormat
          Location: !Ref ParamCloudTrailSource
          SerdeInfo:
            Parameters:
              serialization.format : "1"
            SerializationLibrary: com.amazon.emr.hive.serde.CloudTrailSerde
        
# Create an AWS Glue table
  ResourceTableVPCflow:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreateVPCFlowTable
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Ref ParamVPCFlowTableName
        Description: Table for VPC flow logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamVPCFlowProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.region_partition.type": "enum",
          "projection.region_partition.values": !Ref ParamVPCFlowRegionEnum,
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamVPCFlowAccountEnum,
          "storage.location.template": !Join [ "", [!Ref ParamVPCFlowSource,"${account_partition}/vpcflowlogs/${region_partition}/${date_partition}"]]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: region_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: version
            Type: int
          - Name: account
            Type: string
          - Name: interfaceid
            Type: string
          - Name: sourceaddress
            Type: string
          - Name: destinationaddress
            Type: string
          - Name: sourceport
            Type: int
          - Name: destinationport
            Type: int
          - Name: protocol
            Type: int
          - Name: numpackets
            Type: int
          - Name: numbytes
            Type: bigint
          - Name: starttime
            Type: int
          - Name: endtime
            Type: int
          - Name: action
            Type: string
          - Name: logstatus
            Type: string
          - Name: vpcid
            Type: string
          - Name: subnetid
            Type: string
          - Name: instanceid
            Type: string
          - Name: tcpflags
            Type: smallint
          - Name: type
            Type: string
          - Name: pktsrcaddr
            Type: string
          - Name: pktdstaddr
            Type: string
          - Name: region
            Type: string
          - Name: azid
            Type: string
          - Name: sublocationtype
            Type: string
          - Name: sublocationid
            Type: string
          - Name: pkt_src_aws_service
            Type: string
          - Name: pkt_dst_aws_service
            Type: string
          - Name: flow_direction
            Type: string
          - Name: traffic_path
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Ref ParamVPCFlowSource
          SerdeInfo:
            Parameters:
              serialization.format : ""
              field.delim : " "
            SerializationLibrary: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

# Create an AWS Glue table
  ResourceTableDNSResolver:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreateDNSResolverTable
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Ref ParamDNSResolverTableName
        Description: Table for DNS Resolver logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamDNSResolverProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.vpc_partition.type": "enum",
          "projection.vpc_partition.values": !Ref ParamDNSResolverVPCEnum,
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamDNSResolverAccountEnum,
          "storage.location.template": !Join [ "", [ !Ref ParamDNSResolverSource,"${account_partition}/vpcdnsquerylogs/${vpc_partition}/${date_partition}" ] ]
  }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: vpc_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: version
            Type: float
          - Name: account_id
            Type: string
          - Name: region
            Type: string
          - Name: vpc_id
            Type: string
          - Name: query_timestamp
            Type: string
          - Name: query_name
            Type: string
          - Name: query_type
            Type: string
          - Name: query_class
            Type: string
          - Name: rcode
            Type: string
          - Name: answers
            Type: array<string>
          - Name: srcaddr
            Type: string
          - Name: srcport
            Type: int
          - Name: transport
            Type: string
          - Name: srcids
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Ref ParamDNSResolverSource
          SerdeInfo:
            Parameters:
              serialization.format : "1"
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe

# Create 1 AWS Glue table for ALB logs
  ResourceTableALB1:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate1ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [0, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [1, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [0, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [1, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 2 AWS Glue tables for ALB logs
  ResourceTableALB2:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate2ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [2, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [3, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [2, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [3, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 3 AWS Glue tables for ALB logs
  ResourceTableALB3:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate3ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [4, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [5, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [4, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [5, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 4 AWS Glue tables for ALB logs
  ResourceTableALB4:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate4ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [6, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [7, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [6, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [7, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 5 AWS Glue tables for ALB logs
  ResourceTableALB5:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate5ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [8, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [9, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [8, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [9, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 6 AWS Glue tables for ALB logs
  ResourceTableALB6:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate6ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [10, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [11, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [10, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [11, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 7 AWS Glue tables for ALB logs
  ResourceTableALB7:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate7ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [12, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [13, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [12, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [13, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 8 AWS Glue tables for ALB logs
  ResourceTableALB8:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate8ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [14, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [15, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [14, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [15, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 9 AWS Glue tables for ALB logs
  ResourceTableALB9:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate9ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [16, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [17, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [16, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [17, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 10 AWS Glue tables for ALB logs
  ResourceTableALB10:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate10ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [18, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [19, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [18, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [19, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 11 AWS Glue tables for ALB logs
  ResourceTableALB11:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate11ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [20, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [21, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [20, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [21, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 12 AWS Glue tables for ALB logs
  ResourceTableALB12:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate12ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [22, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [23, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [22, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [23, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 13 AWS Glue tables for ALB logs
  ResourceTableALB13:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate13ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [24, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [25, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [24, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [25, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 14 AWS Glue tables for ALB logs
  ResourceTableALB14:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate14ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [26, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [27, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [26, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [27, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 15 AWS Glue tables for ALB logs
  ResourceTableALB15:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate15ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [28, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [29, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [28, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [29, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 16 AWS Glue tables for ALB logs
  ResourceTableALB16:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate16ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [30, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [31, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [30, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [31, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 17 AWS Glue tables for ALB logs
  ResourceTableALB17:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate17ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [32, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [33, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [32, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [33, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 18 AWS Glue tables for ALB logs
  ResourceTableALB18:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate18ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [34, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [35, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [34, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [35, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 19 AWS Glue tables for ALB logs
  ResourceTableALB19:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate19ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [36, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [37, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [36, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [37, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 20 AWS Glue tables for ALB logs
  ResourceTableALB20:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate20ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [38, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [39, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [38, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [39, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe
# Create 21 AWS Glue tables for ALB logs
  ResourceTableALB21:
    # Creating the table waits for the database to be created
    DependsOn: ResourceDatabaseASL
    Type: AWS::Glue::Table
    Condition: ConditionCreate21ALBTables
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref ParamDatabaseName
      TableInput:
        Name: !Join [ "_", [!Ref ParamALBTableName, !Join [ "", !Split [ '-', !Select [40, !Split [ ",", !Ref ParamALBSources]] ] ]]]
        Description: Table for ALB logs
        TableType: EXTERNAL_TABLE
        Parameters: {
          "classification": "csv",
          "EXTERNAL": "true",
          "skip.header.line.count": "1",
          "projection.enabled": "true",
          "projection.date_partition.type": "date",
          "projection.date_partition.range": !Join [ ',' , [!Ref ParamALBProjectionEventStartDate,'NOW']],
          "projection.date_partition.format": "yyyy/MM/dd",
          "projection.date_partition.interval": "1",
          "projection.date_partition.interval.unit": "DAYS",
          "projection.account_partition.type": "enum",
          "projection.account_partition.values": !Ref ParamALBAccountEnum,
          "storage.location.template": !Join [ "", [ !Select [41, !Split [ ",", !Ref ParamALBSources]],"${account_partition}/elasticloadbalancing/",!Select [40, !Split [ ",", !Ref ParamALBSources]],"/${date_partition}" ] ]
        }
        PartitionKeys:
        - Name: date_partition
          Type: string
        - Name: account_partition
          Type: string
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Columns:
          - Name: type
            Type: string
          - Name: time
            Type: string
          - Name: elb
            Type: string
          - Name: client_ip
            Type: string
          - Name: client_port 
            Type: int
          - Name: target_ip
            Type: string
          - Name: target_port
            Type: int
          - Name: request_processing_time
            Type: double
          - Name: target_processing_time
            Type: double
          - Name: response_processing_time
            Type: double
          - Name: elb_status_code
            Type: string
          - Name: target_status_code
            Type: string
          - Name: received_bytes
            Type: bigint
          - Name: sent_bytes
            Type: bigint
          - Name: request_verb
            Type: string
          - Name: request_url
            Type: string
          - Name: request_proto
            Type: string
          - Name: user_agent
            Type: string
          - Name: ssl_cipher
            Type: string
          - Name: ssl_protocol
            Type: string
          - Name: target_group_arn
            Type: string
          - Name: trace_id
            Type: string
          - Name: domain_name
            Type: string
          - Name: chosen_cert_arn
            Type: string
          - Name: matched_rule_priority
            Type: string
          - Name: request_creation_time
            Type: string
          - Name: actions_executed
            Type: string
          - Name: redirect_url
            Type: string
          - Name: lambda_error_reason
            Type: string
          - Name: target_port_list
            Type: string
          - Name: target_status_code_list
            Type: string
          - Name: classification
            Type: string
          - Name: classification_reason
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Select [41, !Split [ ",", !Ref ParamALBSources]]
          SerdeInfo:
            Parameters:
              serialization.format: '1'
              input.regex: '([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*)[:-]([0-9]*) ([-.0-9]*) ([-.0-9]*) ([-.0-9]*) (|[-0-9]*) (-|[-0-9]*) ([-0-9]*) ([-0-9]*) \"([^ ]*) ([^ ]*) (- |[^ ]*)\" \"([^\"]*)\" ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" ([-.0-9]*) ([^ ]*) \"([^\"]*)\" \"([^\"]*)\" \"([^ ]*)\" \"([^\s]+?)\" \"([^\s]+)\" \"([^ ]*)\" \"([^ ]*)\"'
            SerializationLibrary: org.apache.hadoop.hive.serde2.RegexSerDe

# Create Named Queries for Demo Queries
# CloudTrail Demo Queries
  ResourceDemoQueryCloudTrail1:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_AllPartitions"
      Description: "preview first 10 rows with all fields, limited by a combination partition constraints"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- preview first 10 rows with all fields, limited by a combination partition constraints
        -- NOTE: narrowing the scope of the query as much as possible will improve performance and minimize cost
        SELECT * from cloudtrail
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        LIMIT 10;

  ResourceDemoQueryCloudTrail2:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_PartitionedByDateRange"
      Description: "preview first 10 rows with all fields, limited to a certain date range"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- NOTE: date_partition format is 'YYYY/MM/DD' as a string
        -- preview first 10 rows with all fields, limited to a certain date range
        SELECT * from cloudtrail
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        LIMIT 10;
  
  ResourceDemoQueryCloudTrail3:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_PartitionedByRelativeDate"
      Description: "preview first 10 rows with all fields, limited to the past 30 days (relative)"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- preview first 10 rows with all fields, limited to the past 30 days (relative)
        SELECT * from cloudtrail
        WHERE date_partition >= date_format(date_add('day',-30,current_timestamp), '%Y/%m/%d')
        LIMIT 10;

  ResourceDemoQueryCloudTrail4:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_EventCountByRegion"
      Description: "Summary of event counts by Region (e.g. where is the most activity)"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Summary of event counts by Region (e.g. where is the most activity)
        SELECT region_partition, count(*) as eventcount FROM cloudtrail
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY region_partition
        ORDER BY eventcount DESC

  ResourceDemoQueryCloudTrail5:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_EventCountByRegionAndEventname"
      Description: "Summary of event count by Region and EventName, ordered by event count (descending) for each region"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Summary of event count by Region and EventName, ordered by event count (descending) for each region
        --   Quick way to identify top EventNames seen in each region
        SELECT region_partition, eventname, count(*) as eventcount FROM cloudtrail
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY region_partition, eventname
        ORDER BY region_partition, eventcount DESC
  
  ResourceDemoQueryCloudTrail6:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_UserLoginSummary"
      Description: "User login summary, via AssumeRole or ConsoleLogin"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- User login summary, via AssumeRole or ConsoleLogin
        --   includes a list of all source IPs for each user
        SELECT  useridentity.arn, eventname, array_agg(DISTINCT(sourceipaddress) ORDER BY sourceipaddress) AS sourceips FROM cloudtrail
        WHERE useridentity.arn IS NOT NULL
        AND (eventname = 'AssumeRole' OR eventname = 'ConsoleLogin')
        AND date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY useridentity.arn, eventname
        ORDER BY eventname

  ResourceDemoQueryCloudTrail7:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_FilteredUserActivitySummary"
      Description: "Filtered User Activity Summary"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- User Activity Summary
        -- filter high volume read-only GET/LIST/DECRIBE calls
        SELECT useridentity.arn, array_agg(DISTINCT(eventname)) AS eventnames,
          array_agg(DISTINCT(sourceipaddress) ORDER BY sourceipaddress) AS sourceips,
          array_agg(DISTINCT(useragent) ORDER BY useragent) AS useragents FROM cloudtrail
        WHERE eventname <> 'AssumeRole'
        AND eventname NOT LIKE 'Get%'
        AND eventname NOT LIKE 'List%'
        AND eventname NOT LIKE 'Describe%'
        AND date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY useridentity.arn

  ResourceDemoQueryCloudTrail8:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_FilteredUserActivitySummary2"
      Description: "Filtered User Activity Summary With Username and PrincipalID"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- User Activity Summary, including username
        -- filter high volume read-only GET/LIST/DECRIBE calls
        -- same as above, but will include the ARN or the username (for IAM Users) of the principal 
        SELECT useridentity.arn, useridentity.username,
          array_agg(DISTINCT(eventname) ORDER BY eventname) AS eventnames,
          array_agg(DISTINCT(sourceipaddress) ORDER BY sourceipaddress) AS sourceips,
          array_agg(DISTINCT(useragent) ORDER BY useragent) AS useragents FROM cloudtrail
        WHERE eventname <> 'AssumeRole'
        AND eventname NOT LIKE 'Get%'
        AND eventname NOT LIKE 'List%'
        AND eventname NOT LIKE 'Describe%'
        AND date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY useridentity.arn, useridentity.principalid, useridentity.username
  
  ResourceDemoQueryCloudTrail9:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_IAMChangeSummary"
      Description: "IAM change summary"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- IAM change summary
        -- * filter read-only GET/LIST/DESCRIBE
        -- * filter unsuccessful calls
        SELECT eventtime, useridentity.arn, useridentity.username, eventname, requestparameters 
        FROM cloudtrail
        WHERE eventsource = 'iam.amazonaws.com'
        AND eventname NOT LIKE 'Get%'
        AND eventname NOT LIKE 'List%'
        AND eventname NOT LIKE 'Describe%'
        AND errorcode IS NULL
        AND date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        ORDER BY account_partition, eventtime

  ResourceDemoQueryCloudTrail10:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_IAMAccessKeyCreations"
      Description: "Access Key creations with extract of username and keyid"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Access Key creations with extract of username and keyid
        -- * filter unsuccessful calls
        SELECT eventtime, useridentity.arn, useridentity.username, eventname,
          JSON_EXTRACT_SCALAR(JSON_EXTRACT(responseelements, '$.accessKey'), '$.userName') AS userName,
          JSON_EXTRACT_SCALAR(JSON_EXTRACT(responseelements, '$.accessKey'), '$.accessKeyId') AS accessKey
          FROM cloudtrail
        WHERE eventname = 'CreateAccessKey'
        AND errorcode IS NULL
        AND date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        ORDER BY account_partition, eventtime

  ResourceDemoQueryCloudTrail11:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_IAMPasswordChanges"
      Description: "Password changes with extract of username"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Password changes with extract of username
        -- * filter unsuccessful calls
        SELECT eventtime, useridentity.arn, useridentity.username, eventname,
          JSON_EXTRACT_SCALAR(requestparameters, '$.userName') AS "username with password modified"
          FROM cloudtrail
        WHERE eventname IN ('UpdateLoginProfile', 'CreateLoginProfile')
        AND errorcode IS NULL
        AND date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        ORDER BY account_partition, eventtime   

  ResourceDemoQueryCloudTrail12:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_CTAS_SingleAccountRegion90Days"
      Description: "Create optimized ORC columnar format table for a single account and region for the past 90 days"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Create optimized ORC columnar format table for a single account and region for the past 90 days
        -- NOTE: single query limit is 100 partitions, to add additional accounts, regions, or days use the following INSERT INTO method
        -- Reference: https://docs.aws.amazon.com/athena/latest/ug/ctas-insert-into.html
        CREATE TABLE cloudtrail_orc
        WITH (format = 'ORC', orc_compression = 'SNAPPY', partitioned_by = ARRAY['account_partition','region_partition','date_partition'] ) AS
        SELECT eventversion,
                useridentity,
                eventtime,
                eventsource,
                eventname,
                awsregion,
                sourceipaddress,
                useragent,
                errorcode,
                errormessage,
                requestparameters,
                responseelements,
                additionaleventdata,
                requestid,
                eventid,
                resources,
                eventtype,
                apiversion,
                readonly,
                recipientaccountid,
                serviceeventdetails,
                sharedeventid,
                vpcendpointid,
                account_partition,
                region_partition,
                date_partition
        FROM cloudtrail
        WHERE account_partition = '111122223333' 
        AND region_partition = 'us-east-1'
        AND date_partition >= date_format(date_add('day',-90,current_timestamp), '%Y/%m/%d')
  ResourceDemoQueryCloudTrail13:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_INSERT_INTO_SingleAccountRegion90Days"
      Description: "Add optimized ORC columnar format table for a single account and region for the past 90 days"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Add optimized ORC columnar format table for a single account and region for the past 90 days
        -- NOTE: single query limit is 100 partitions, to add additional accounts, regions, or days keep using this INSERT INTO method
        -- Reference: https://docs.aws.amazon.com/athena/latest/ug/ctas-insert-into.html
        INSERT INTO cloudtrail_orc
        SELECT eventversion,
                useridentity,
                eventtime,
                eventsource,
                eventname,
                awsregion,
                sourceipaddress,
                useragent,
                errorcode,
                errormessage,
                requestparameters,
                responseelements,
                additionaleventdata,
                requestid,
                eventid,
                resources,
                eventtype,
                apiversion,
                readonly,
                recipientaccountid,
                serviceeventdetails,
                sharedeventid,
                vpcendpointid,
                account_partition,
                region_partition,
                date_partition
        FROM cloudtrail
        WHERE account_partition = '111122223333' 
        AND region_partition = 'us-east-2'
        AND date_partition >= date_format(date_add('day',-90,current_timestamp), '%Y/%m/%d')   
  ResourceDemoQueryCloudTrail14:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_CloudTrail_AllNonRFC1918SourceIPActivity"
      Description: "Search for all events originating from a public (non-RCF1918) IP address"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Identify API events made from a public IP (i.e. a non-RFC1918 source IP address)
        -- NOTE: this is an example of using the new IPADDRESS data type, as string a string comparison would correctly compare IP addresses
        SELECT *
        FROM cloudtrail
        WHERE   regexp_like(sourceipaddress, '^\d')
        AND NOT ( (CAST(sourceipaddress AS IPADDRESS) > IPADDRESS '10.0.0.0'
        AND CAST(sourceipaddress AS IPADDRESS) < IPADDRESS '10.255.255.255')
        OR (CAST(sourceipaddress AS IPADDRESS) > IPADDRESS '172.16.0.0'
        AND CAST(sourceipaddress AS IPADDRESS) < IPADDRESS '172.31.255.255')
        OR (CAST(sourceipaddress AS IPADDRESS) > IPADDRESS '192.168.0.0'
        AND CAST(sourceipaddress AS IPADDRESS) < IPADDRESS '192.168.255.255'))
        AND date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')   
# VPCFlow Demo Queries
  ResourceDemoQueryVPCFlow1:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_AllPartitions"
      Description: "preview first 10 rows with all fields, limited by a combination partition constraints"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- preview first 10 rows with all fields, limited by a combination partition constraints
        -- NOTE: narrowing the scope of the query as much as possible will improve performance and minimize cost
        SELECT * from vpcflow
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        LIMIT 10;
  ResourceDemoQueryVPCFlow2:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_PartitionedByDateRange"
      Description: "preview first 10 rows with all fields, limited to a certain date range"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- NOTE: date_partition format is 'YYYY/MM/DD' as a string
        -- preview first 10 rows with all fields, limited to a certain date range
        SELECT * from vpcflow
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        LIMIT 10;
  ResourceDemoQueryVPCFlow3:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_PartitionedByRelativeDate"
      Description: "preview first 10 rows with all fields, limited to the past 30 days (relative)"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- preview first 10 rows with all fields, limited to the past 30 days (relative)
        SELECT * from vpcflow
        WHERE date_partition >= date_format(date_add('day',-30,current_timestamp), '%Y/%m/%d')
        LIMIT 10;
  ResourceDemoQueryVPCFlow4:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_ListSrcDstIPPairRecordCounts"
      Description: "Get list source/destination IP pairs ordered by the number of records "
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get list source/destination IP pairs ordered by the number of records 
        SELECT region, instanceid, sourceaddress, destinationaddress, count(*) as record_count FROM vpcflow
        WHERE date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY region, instanceid, sourceaddress, destinationaddress
        ORDER BY record_count DESC
  ResourceDemoQueryVPCFlow5:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_SrcDstIPPairSummary"
      Description: "Get a summary of records between a given source/destination IP pair, ordered by the total number of bytes"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get a summary of records between a given source/destination IP pair, ordered by the total number of bytes
        SELECT region, instanceid, sourceaddress, destinationaddress, sum(numbytes) as byte_count FROM vpcflow
        WHERE (sourceaddress = '192.0.2.1' OR destinationaddress = '192.0.2.1')
        AND (sourceaddress = '203.0.113.2' OR destinationaddress = '203.0.113.2')
        AND date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY region, instanceid, sourceaddress, destinationaddress
        ORDER BY byte_count DESC
  ResourceDemoQueryVPCFlow6:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_InstanceSummaryFromPort"
      Description: "Get a summary of the number of bytes sent from port 443 limited to a single instance"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get a summary of the number of bytes sent from port 443 limited to a single instance
        -- NOTE: for remote IPs this represents the amount data downloaded from port 443 by the instance,
        --       for instance IPs this represents the amount data downloaded by remote hosts from the instance on port 443
        SELECT region, instanceid, sourceaddress, sourceport, destinationaddress, sum(numbytes) as byte_count FROM vpcflow
        WHERE instanceid = 'i-000000000000000'
        AND sourceport = 443
        AND date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY region, instanceid, sourceaddress, sourceport, destinationaddress
        ORDER BY byte_count DESC
  ResourceDemoQueryVPCFlow7:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_InstanceSummaryToPort"
      Description: "Get a summary of the number of bytes sent to port 443 limited to a single instance"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get a summary of the number of bytes sent to port 443 limited to a single instance
        -- NOTE: for remote IPs this represents the amount data uploaded to port 443 by the instance,
        --       for instance IPs this represents the amount data uploaded by remote hosts to the instance on port 443
        SELECT region, instanceid, sourceaddress, destinationaddress, destinationport, sum(numbytes) as byte_count FROM vpcflow
        WHERE instanceid = 'i-000000000000000'
        AND destinationport = 443
        AND date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY region, instanceid, sourceaddress, destinationaddress, destinationport
        ORDER BY byte_count DESC
  ResourceDemoQueryVPCFlow8:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_IpConnectionsSummary"
      Description: "Get a summary with the number of bytes for each src_ip,src_port,dst_ip,dst_port quad across all records to or from a specific IP"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get a summary with the number of bytes for each src_ip,src_port,dst_ip,dst_port quad across all records to or from a specific IP
        SELECT sourceaddress, destinationaddress, sourceport, destinationport, sum(numbytes) as byte_count FROM vpcflow
        WHERE (sourceaddress = '192.0.2.1' OR destinationaddress = '192.0.2.1')
        AND date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')
        GROUP BY sourceaddress, destinationaddress, sourceport, destinationport
        ORDER BY byte_count DESC    
  ResourceDemoQueryVPCFlow9:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_SrcDstIPPairDetailWithDirection"
      Description: "Get a summary with the number of bytes for each src_ip,src_port,dst_ip,dst_port quad across all records to or from a specific IP"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get all flow records between two IPs showing flow_direction (requires v5 flow-direction field to be enabled)
        SELECT from_unixtime(starttime) AS start_time,
        from_unixtime(endtime) AS end_time,
        interfaceid,
        sourceaddress,
        destinationaddress,
        sourceport,
        destinationport,
        numpackets,
        numbytes,
        flow_direction,
        action
        FROM vpcflow
        WHERE (sourceaddress = '192.0.2.1'
        AND destinationaddress = '192.0.2.254')
        OR (sourceaddress = '192.0.2.254'
        AND destinationaddress = '192.0.2.1')
        ORDER BY starttime ASC
  ResourceDemoQueryVPCFlow10:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_VPCFlow_AllTrafficBetweenPublicAndPrivateIPs"
      Description: "Search for traffic between a private (RFC1918) IP address and a public (non-RFC1918) IP address (exclude internal-to-internal traffic)"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Search for traffic between a private (RFC1918) IP address and a public (non-RFC1918) IP address
        -- NOTE: this is an example of using the new IPADDRESS data type, as string a string comparison would correctly compare IP addresses
        SELECT *
        FROM vpcflow
        WHERE (sourceaddress <> '-' AND destinationaddress <> '-')
        AND (    (
                NOT ( (CAST(sourceaddress AS IPADDRESS) > IPADDRESS '10.0.0.0'
                AND CAST(sourceaddress AS IPADDRESS) < IPADDRESS '10.255.255.255')
                OR (CAST(sourceaddress AS IPADDRESS) > IPADDRESS '172.16.0.0'
                AND CAST(sourceaddress AS IPADDRESS) < IPADDRESS '172.31.255.255')
                OR (CAST(sourceaddress AS IPADDRESS) > IPADDRESS '192.168.0.0'
                AND CAST(sourceaddress AS IPADDRESS) < IPADDRESS '192.168.255.255'))
            
                AND ( (CAST(destinationaddress AS IPADDRESS) > IPADDRESS '10.0.0.0'
                AND CAST(destinationaddress AS IPADDRESS) < IPADDRESS '10.255.255.255')
                OR (CAST(destinationaddress AS IPADDRESS) > IPADDRESS '172.16.0.0'
                AND CAST(destinationaddress AS IPADDRESS) < IPADDRESS '172.31.255.255')
                OR (CAST(destinationaddress AS IPADDRESS) > IPADDRESS '192.168.0.0'
                AND CAST(destinationaddress AS IPADDRESS) < IPADDRESS '192.168.255.255'))
                )
                
              OR (
                NOT ( (CAST(destinationaddress AS IPADDRESS) > IPADDRESS '10.0.0.0'
                AND CAST(destinationaddress AS IPADDRESS) < IPADDRESS '10.255.255.255')
                OR (CAST(destinationaddress AS IPADDRESS) > IPADDRESS '172.16.0.0'
                AND CAST(destinationaddress AS IPADDRESS) < IPADDRESS '172.31.255.255')
                OR (CAST(destinationaddress AS IPADDRESS) > IPADDRESS '192.168.0.0'
                AND CAST(destinationaddress AS IPADDRESS) < IPADDRESS '192.168.255.255'))
            
                AND ( (CAST(sourceaddress AS IPADDRESS) > IPADDRESS '10.0.0.0'
                AND CAST(sourceaddress AS IPADDRESS) < IPADDRESS '10.255.255.255')
                OR (CAST(sourceaddress AS IPADDRESS) > IPADDRESS '172.16.0.0'
                AND CAST(sourceaddress AS IPADDRESS) < IPADDRESS '172.31.255.255')
                OR (CAST(sourceaddress AS IPADDRESS) > IPADDRESS '192.168.0.0'
                AND CAST(sourceaddress AS IPADDRESS) < IPADDRESS '192.168.255.255'))
                )
            )
        AND date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND region_partition in ('us-east-1','us-east-2','us-west-2', 'us-west-2')

# R53 DNS Resolver Demo Queries
  ResourceDemoQueryR53DNS1:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_R53DNS_AllPartitions"
      Description: "preview first 10 rows with all fields, limited by a combination partition constraints"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- preview first 10 rows with all fields, limited by a combination partition constraints
        -- NOTE: narrowing the scope of the query as much as possible will improve performance and minimize cost
        SELECT * from r53dns
        WHERE date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND vpc_partition in ('vpc-00000001','vpc-00000002','vpc-00000003')
        LIMIT 10;
  ResourceDemoQueryR53DNS2:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_R53DNS_PartitionedByDateRange"
      Description: "preview first 10 rows with all fields, limited to a certain date range"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- NOTE: date_partition format is 'YYYY/MM/DD' as a string
        -- preview first 10 rows with all fields, limited to a certain date range
        SELECT * from r53dns
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        LIMIT 10;
  ResourceDemoQueryR53DNS3:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_R53DNS_PartitionedByRelativeDate"
      Description: "preview first 10 rows with all fields, limited to the past 30 days (relative)"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- preview first 10 rows with all fields, limited to the past 30 days (relative)
        SELECT * from r53dns
        WHERE date_partition >= date_format(date_add('day',-30,current_timestamp), '%Y/%m/%d')
        LIMIT 10;
  ResourceDemoQueryR53DNS4:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_R53DNS_QueriesByInstanceAndCount"
      Description: "Sort queries by requester instance count and query count"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Sort queries by requester instance count and query count
        SELECT  query_name, query_type, array_distinct(filter(array_agg(srcids), q -> q.instance IS NOT NULL)) as instances, 
                cardinality(array_distinct(filter(array_agg(srcids), q -> q.instance IS NOT NULL))) as query_count 
        FROM r53dns
        WHERE date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND vpc_partition in ('vpc-00000001','vpc-00000002','vpc-00000003')
        GROUP BY query_name, query_type
        ORDER by query_count DESC;
  ResourceDemoQueryR53DNS5:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_R53DNS_QuerySummaryByCount"
      Description: "Summary with count of each time a name name queried"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Summary with count of each time a name name queried
        SELECT  query_name, query_type, count(*) as query_count FROM r53dns
        WHERE date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND vpc_partition in ('vpc-00000001','vpc-00000002','vpc-00000003')
        GROUP BY query_name, query_type
        ORDER BY query_count DESC;
  ResourceDemoQueryR53DNS6:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_R53DNS_QuerySummaryAAAARecordsByCount"
      Description: "Summary with count of each time a AAAA record name name queried"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Summary with count of each time a AAAA record name name queried
        SELECT  query_name, query_type, count(*) as query_count FROM r53dns
        WHERE query_type <> 'AAAA'
        AND date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND vpc_partition in ('vpc-00000001','vpc-00000002','vpc-00000003')
        GROUP BY query_name, query_type
        ORDER BY query_count DESC;
  ResourceDemoQueryR53DNS7:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_R53DNS_QuerySummaryAAAARecordsByCountWithTLDAndSLD"
      Description: "Summary with count of each time a AAAA record name name queried; split out TLD and SLD (note: doesn't properly handle TLDs containing a '.' (e.g. .com.br)"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Summary with count of each time a AAAA record name name queried
        -- split out TLD and SLD (note: doesn't properly handle TLDs containing a '.' (e.g. .com.br)
        SELECT element_at(split(query_name,'.'),-2) AS tld, 
                element_at(split(query_name,'.'),-3) AS sld, 
                query_name, query_type, 
                count(*) AS query_count
        FROM r53dns
        WHERE query_type <> 'AAAA'
        AND date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND vpc_partition in ('vpc-00000001','vpc-00000002','vpc-00000003')
        GROUP BY  query_name, query_type
        ORDER BY  query_count DESC;
  ResourceDemoQueryR53DNS8:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_R53DNS_RecordsResolvingToSpecificIP"
      Description: "Get records that that resolve to a specific IP"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get records that that resolve to a specific IP
        SELECT * FROM r53dns
        WHERE contains(transform(answers, x-> x.rdata), '203.0.113.2')
        AND date_partition >= '2020/07/01'
        AND date_partition <= '2020/07/31'
        AND account_partition = '111122223333'
        AND vpc_partition in ('vpc-00000001','vpc-00000002','vpc-00000003');

# ALB Demo Queries
  ResourceDemoQueryALB1:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_AllPartitions"
      Description: "preview first 10 rows with all fields, limited by a combination partition constraints"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- preview first 10 rows with all fields, limited by a combination partition constraints
        -- NOTE: narrowing the scope of the query as much as possible will improve performance and minimize cost
        SELECT * from alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        LIMIT 10;
  ResourceDemoQueryALB2:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_AllALB"
      Description: "Get list of ALBs in all accounts"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get list of ALBs in all accounts
        SELECT account_partition, elb FROM alb_uswest2
        GROUP BY account_partition, elb
        ORDER BY account_partition ASC
  ResourceDemoQueryALB3:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_BY_REQUEST_COUNT"
      Description: "Get list of ALBs ordered by the number of records"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get list ALB ordered by the number of records 
        SELECT elb, account_partition, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        GROUP BY elb, account_partition
        ORDER BY record_count DESC
  ResourceDemoQueryALB4:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_BY_DEST_ALB"
      Description: "Get count of client IPs for specific alb"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get count of client IPs for specific alb 
        SELECT client_ip, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND elb LIKE '%testalb%'
        GROUP BY client_ip
        ORDER BY record_count DESC
  ResourceDemoQueryALB5:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_BY_CLIENT_IP"
      Description: "Get count of requests from specific client IPs"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get count of requests from specific client IPs
        SELECT elb, account_partition, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND client_ip LIKE '69.110.128.117%'
        GROUP BY elb, account_partition
        ORDER BY record_count DESC
  ResourceDemoQueryALB6:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_SOURCE_DEST"
      Description: "Get list of source IP/port and destination ALB in specifc AWS account ordered by the number of records"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get list of source IP/port and destination ALB in specifc AWS account ordered by the number of records 
        SELECT type, elb, client_ip, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND account_partition = '111122223333'
        GROUP BY type, elb, client_ip
        ORDER BY record_count DESC
  ResourceDemoQueryALB7:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_COUNT_OF_USER_AGENTS"
      Description: "Get count of user agents ordered by the number of records lowest to highest"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get count of user agents ordered by the number of records lowest to highest 
        SELECT user_agent, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        GROUP BY user_agent
        ORDER BY record_count ASC
  ResourceDemoQueryALB8:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_USER_AGENT_FROM_IP"
      Description: "Get list of user agents for specific client IP"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get list of user agents for specific client IP
        SELECT user_agent, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND client_ip LIKE '69.110.128.117%'
        GROUP BY user_agent
        ORDER BY record_count DESC
  ResourceDemoQueryALB9:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_ELB_STATUS_CODE"
      Description: "Get count requests with a specific elb status code"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get count requests with a specific elb status code
        SELECT elb, account_partition, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND elb_status_code = '490'
        GROUP BY elb, account_partition
        ORDER BY record_count DESC
  ResourceDemoQueryALB10:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_TARGET_STATUS_CODE"
      Description: "Get count requests with a specific target status code"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get count requests with a specific target status code
        SELECT elb, account_partition, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND target_status_code = '3900'
        GROUP BY elb, account_partition
        ORDER BY record_count DESC
  ResourceDemoQueryALB11:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_NON_HTTPS"
      Description: "Get count of all non https requests"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get count of all non https requests
        SELECT elb, account_partition, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND type NOT LIKE 'https'
        GROUP BY elb, account_partition
        ORDER BY record_count DESC
  ResourceDemoQueryALB11:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_BY_SSL_CIPHER"
      Description: "Get count of all requests with specific ssl sipher"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get count of all requests with specific ssl sipher
        SELECT elb, account_partition, count(*) as record_count FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND ssl_cipher LIKE '10.0%'
        GROUP BY elb, account_partition
        ORDER BY record_count DESC
  ResourceDemoQueryALB12:
    Type: AWS::Athena::NamedQuery
    Properties: 
      Name: "DEMO_ALB_REQUESTS_BY_ALB_AND_CLIENT_IP"
      Description: "Get requests info from specific client IPs to specific ALB"
      Database: !Ref ParamDatabaseName
      WorkGroup: !Ref ResourceAthenaWorkgroupDefault
      QueryString: | 
        -- Get requests info from specific client IPs to specific ALB
        SELECT type, 
                    time, 
                    elb_status_code, 
                    target_status_code, 
                    received_bytes, 
                    sent_bytes, 
                    request_verb, 
                    request_url, 
                    request_proto, 
                    user_agent, 
                    ssl_cipher, 
                    ssl_protocol, 
                    trace_id, 
                    domain_name,
                    chosen_cert_arn, 
                    matched_rule_priority,
                    request_creation_time,
                    redirect_url,
                    actions_executed  
        FROM alb_uswest2
        WHERE date_partition >= '2021/07/01'
        AND date_partition <= '2021/07/31'
        AND client_ip LIKE '69.110.128.117%'
        AND elb LIKE '%testalb%'